import com.chrynan.strings.buildSrc.LibraryConstants

group LibraryConstants.group
version LibraryConstants.versionName

buildscript {
    repositories {
        google()
        jcenter()
    }
    dependencies {
        classpath "com.android.tools.build:gradle:3.5.3"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:1.3.72"
        classpath "digital.wup:android-maven-publish:3.6.2"
        classpath "com.jfrog.bintray.gradle:gradle-bintray-plugin:1.8.4"
        classpath "org.jetbrains.dokka:dokka-gradle-plugin:0.10.1"
        classpath "org.jetbrains.kotlin:kotlin-serialization:1.3.72"
    }
}

allprojects {
    repositories {
        google()
        jcenter()
        mavenCentral()
        maven {
            url = "https://dl.bintray.com/chrynan/chrynan"
        }
    }
}

subprojects {
    if (path != "strings-example-json") {
        apply plugin: "maven-publish"
        apply plugin: "com.jfrog.bintray"
        apply plugin: "org.jetbrains.dokka"

        dokka {
            outputFormat = "gfm"
            outputDirectory = "../docs"

            configuration {
                includeNonPublic = false
                skipEmptyPackages = true
                skipDeprecated = true
                reportUndocumented = true
                jdkVersion = 8
                targets = ["JVM", "COMMON"]
            }
        }

        bintray {
            user = project.findProperty("BINTRAY_USER") ?: System.getenv("BINTRAY_USER")
            key = project.findProperty("BINTRAY_KEY") ?: System.getenv("BINTRAY_KEY")
            pkg {
                repo = LibraryConstants.bintrayRepo
                name = LibraryConstants.repoName
                licenses = [LibraryConstants.license]
                vcsUrl = LibraryConstants.vcsUrl
                version {
                    name = LibraryConstants.versionName
                    desc = LibraryConstants.versionDescription
                    released = new Date()
                    vcsTag = LibraryConstants.versionName
                }
            }
        }

        bintrayUpload.doFirst {
            publications = publishing.publications.collect {
                it.name
            }
        }

        bintrayUpload.dependsOn publishToMavenLocal
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}